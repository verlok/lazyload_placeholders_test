{"version":3,"sources":["lazyload.js"],"names":["LazyLoad","runningOnBrowser","window","isBot","navigator","test","userAgent","supportsIntersectionObserver","IntersectionObserverEntry","prototype","supportsClassList","document","createElement","defaultSettings","elements_selector","container","threshold","thresholds","data_src","data_srcset","data_sizes","data_bg","class_loading","class_loaded","class_error","load_delay","auto_unobserve","callback_enter","callback_exit","callback_reveal","callback_loaded","callback_error","callback_finish","use_native","createInstance","classObj","options","event","instance","CustomEvent","detail","err","createEvent","initCustomEvent","dispatchEvent","getData","element","attribute","getAttribute","setData","value","attrName","setAttribute","removeAttribute","getWasProcessedData","setTimeoutData","getTimeoutData","callbackIfSet","callback","argument","updateLoadingCount","plusMinus","_loadingCount","_elements","length","_settings","getSourceTags","parentTag","childTag","sourceTags","i","children","tagName","push","setAttributeIfValue","setImageAttributes","settings","setSourcesFunctions","IMG","parent","parentNode","forEach","sourceTag","IFRAME","VIDEO","load","setSources","elements","elementToPurge","setSourcesFunction","filter","srcDataValue","bgDataValue","style","backgroundImage","concat","setSourcesBgImage","addClass","className","classList","add","addEventListener","eventName","handler","removeEventListener","removeEventListeners","loadHandler","errorHandler","eventHandler","success","target","remove","replace","RegExp","removeClass","addOneShotEventListeners","addEventListeners","managedTags","revealAndUnobserve","observer","_observer","revealElement","unobserve","cancelDelayLoad","timeoutId","clearTimeout","delayLoad","loadDelay","setTimeout","force","indexOf","setWasProcessedData","callback_set","setObserver","IntersectionObserver","entries","entry","isIntersecting","intersectionRatio","onEnter","onExit","root","rootMargin","nativeLazyTags","getElements","purgeProcessedElements","nodeSet","querySelectorAll","queryElements","Array","slice","call","customSettings","this","_extends","getInstanceSettings","update","_this","HTMLImageElement","shouldUseNative","observe","loadAll","destroy","_this2","_this3","optionsItem","autoInitialize","lazyLoadOptions"],"mappings":"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","file":"lazyload.iife.min.js","sourcesContent":["var LazyLoad = (function () {\n'use strict';\n\nconst runningOnBrowser = typeof window !== \"undefined\";\n\nconst isBot =\n\t(runningOnBrowser && !(\"onscroll\" in window)) ||\n\t(typeof navigator !== \"undefined\" &&\n\t\t/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent));\n\nconst supportsIntersectionObserver =\n\trunningOnBrowser &&\n\t\"IntersectionObserver\" in window &&\n\t\"IntersectionObserverEntry\" in window &&\n\t\"intersectionRatio\" in window.IntersectionObserverEntry.prototype &&\n\t\"isIntersecting\" in window.IntersectionObserverEntry.prototype;\n\nconst supportsClassList =\n\trunningOnBrowser && \"classList\" in document.createElement(\"p\");\n\nconst defaultSettings = {\n\telements_selector: \"img\",\n\tcontainer: isBot || runningOnBrowser ? document : null,\n\tthreshold: 300,\n\tthresholds: null,\n\tdata_src: \"src\",\n\tdata_srcset: \"srcset\",\n\tdata_sizes: \"sizes\",\n\tdata_bg: \"bg\",\n\tclass_loading: \"loading\",\n\tclass_loaded: \"loaded\",\n\tclass_error: \"error\",\n\tload_delay: 0,\n\tauto_unobserve: true,\n\tcallback_enter: null,\n\tcallback_exit: null,\n\tcallback_reveal: null,\n\tcallback_loaded: null,\n\tcallback_error: null,\n\tcallback_finish: null,\n\tuse_native: false\n};\n\nvar getInstanceSettings = customSettings => {\n\treturn Object.assign({}, defaultSettings, customSettings);\n};\n\n/* Creates instance and notifies it through the window element */\nconst createInstance = function(classObj, options) {\n\tvar event;\n\tlet eventString = \"LazyLoad::Initialized\";\n\tlet instance = new classObj(options);\n\ttry {\n\t\t// Works in modern browsers\n\t\tevent = new CustomEvent(eventString, { detail: { instance } });\n\t} catch (err) {\n\t\t// Works in Internet Explorer (all versions)\n\t\tevent = document.createEvent(\"CustomEvent\");\n\t\tevent.initCustomEvent(eventString, false, false, { instance });\n\t}\n\twindow.dispatchEvent(event);\n};\n\n/* Auto initialization of one or more instances of lazyload, depending on the \n    options passed in (plain object or an array) */\nfunction autoInitialize(classObj, options) {\n\tif (!options) {\n\t\treturn;\n\t}\n\tif (!options.length) {\n\t\t// Plain object\n\t\tcreateInstance(classObj, options);\n\t} else {\n\t\t// Array of objects\n\t\tfor (let i = 0, optionsItem; (optionsItem = options[i]); i += 1) {\n\t\t\tcreateInstance(classObj, optionsItem);\n\t\t}\n\t}\n}\n\nconst dataPrefix = \"data-\";\nconst processedDataName = \"was-processed\";\nconst timeoutDataName = \"ll-timeout\";\nconst trueString = \"true\";\n\nconst getData = (element, attribute) => {\n\treturn element.getAttribute(dataPrefix + attribute);\n};\n\nconst setData = (element, attribute, value) => {\n\tvar attrName = dataPrefix + attribute;\n\tif (value === null) {\n\t\telement.removeAttribute(attrName);\n\t\treturn;\n\t}\n\telement.setAttribute(attrName, value);\n};\n\nconst setWasProcessedData = element =>\n\tsetData(element, processedDataName, trueString);\n\nconst getWasProcessedData = element =>\n\tgetData(element, processedDataName) === trueString;\n\nconst setTimeoutData = (element, value) =>\n\tsetData(element, timeoutDataName, value);\n\nconst getTimeoutData = element => getData(element, timeoutDataName);\n\nconst purgeProcessedElements = elements => {\n\treturn elements.filter(element => !getWasProcessedData(element));\n};\n\nconst purgeOneElement = (elements, elementToPurge) => {\n\treturn elements.filter(element => element !== elementToPurge);\n};\n\nconst callbackIfSet = (callback, argument) => {\n\tif (callback) {\n\t\tcallback(argument);\n\t}\n};\n\nconst updateLoadingCount = (instance, plusMinus) => {\n\tinstance._loadingCount += plusMinus;\n\tif (instance._elements.length === 0 && instance._loadingCount === 0) {\n\t\tcallbackIfSet(instance._settings.callback_finish);\n\t}\n};\n\nconst getSourceTags = parentTag => {\n\tlet sourceTags = [];\n\tfor (let i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\n\t\tif (childTag.tagName === \"SOURCE\") {\n\t\t\tsourceTags.push(childTag);\n\t\t}\n\t}\n\treturn sourceTags;\n};\n\nconst setAttributeIfValue = (element, attrName, value) => {\n\tif (!value) {\n\t\treturn;\n\t}\n\telement.setAttribute(attrName, value);\n};\n\nconst setImageAttributes = (element, settings) => {\n\tsetAttributeIfValue(\n\t\telement,\n\t\t\"sizes\",\n\t\tgetData(element, settings.data_sizes)\n\t);\n\tsetAttributeIfValue(\n\t\telement,\n\t\t\"srcset\",\n\t\tgetData(element, settings.data_srcset)\n\t);\n\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n};\n\nconst setSourcesImg = (element, settings) => {\n\tconst parent = element.parentNode;\n\n\tif (parent && parent.tagName === \"PICTURE\") {\n\t\tlet sourceTags = getSourceTags(parent);\n\t\tsourceTags.forEach(sourceTag => {\n\t\t\tsetImageAttributes(sourceTag, settings);\n\t\t});\n\t}\n\n\tsetImageAttributes(element, settings);\n};\n\nconst setSourcesIframe = (element, settings) => {\n\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n};\n\nconst setSourcesVideo = (element, settings) => {\n\tlet sourceTags = getSourceTags(element);\n\tsourceTags.forEach(sourceTag => {\n\t\tsetAttributeIfValue(\n\t\t\tsourceTag,\n\t\t\t\"src\",\n\t\t\tgetData(sourceTag, settings.data_src)\n\t\t);\n\t});\n\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n\telement.load();\n};\n\nconst setSourcesBgImage = (element, settings) => {\n\tconst srcDataValue = getData(element, settings.data_src);\n\tconst bgDataValue = getData(element, settings.data_bg);\n\n\tif (srcDataValue) {\n\t\telement.style.backgroundImage = `url(\"${srcDataValue}\")`;\n\t}\n\n\tif (bgDataValue) {\n\t\telement.style.backgroundImage = bgDataValue;\n\t}\n};\n\nconst setSourcesFunctions = {\n\tIMG: setSourcesImg,\n\tIFRAME: setSourcesIframe,\n\tVIDEO: setSourcesVideo\n};\n\nconst setSources = (element, instance) => {\n\tconst settings = instance._settings;\n\tconst tagName = element.tagName;\n\tconst setSourcesFunction = setSourcesFunctions[tagName];\n\tif (setSourcesFunction) {\n\t\tsetSourcesFunction(element, settings);\n\t\tupdateLoadingCount(instance, 1);\n\t\tinstance._elements = purgeOneElement(instance._elements, element);\n\t\treturn;\n\t}\n\tsetSourcesBgImage(element, settings);\n};\n\nconst addClass = (element, className) => {\n\tif (supportsClassList) {\n\t\telement.classList.add(className);\n\t\treturn;\n\t}\n\telement.className += (element.className ? \" \" : \"\") + className;\n};\n\nconst removeClass = (element, className) => {\n\tif (supportsClassList) {\n\t\telement.classList.remove(className);\n\t\treturn;\n\t}\n\telement.className = element.className.\n\t\treplace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").\n\t\treplace(/^\\s+/, \"\").\n\t\treplace(/\\s+$/, \"\");\n};\n\nconst genericLoadEventName = \"load\";\nconst mediaLoadEventName = \"loadeddata\";\nconst errorEventName = \"error\";\n\nconst addEventListener = (element, eventName, handler) => {\n\telement.addEventListener(eventName, handler);\n};\n\nconst removeEventListener = (element, eventName, handler) => {\n\telement.removeEventListener(eventName, handler);\n};\n\nconst addEventListeners = (element, loadHandler, errorHandler) => {\n\taddEventListener(element, genericLoadEventName, loadHandler);\n\taddEventListener(element, mediaLoadEventName, loadHandler);\n\taddEventListener(element, errorEventName, errorHandler);\n};\n\nconst removeEventListeners = (element, loadHandler, errorHandler) => {\n\tremoveEventListener(element, genericLoadEventName, loadHandler);\n\tremoveEventListener(element, mediaLoadEventName, loadHandler);\n\tremoveEventListener(element, errorEventName, errorHandler);\n};\n\nconst eventHandler = function(event, success, instance) {\n\tvar settings = instance._settings;\n\tconst className = success ? settings.class_loaded : settings.class_error;\n\tconst callback = success\n\t\t? settings.callback_loaded\n\t\t: settings.callback_error;\n\tconst element = event.target;\n\n\tremoveClass(element, settings.class_loading);\n\taddClass(element, className);\n\tcallbackIfSet(callback, element);\n\n\tupdateLoadingCount(instance, -1);\n};\n\nconst addOneShotEventListeners = (element, instance) => {\n\tconst loadHandler = event => {\n\t\teventHandler(event, true, instance);\n\t\tremoveEventListeners(element, loadHandler, errorHandler);\n\t};\n\tconst errorHandler = event => {\n\t\teventHandler(event, false, instance);\n\t\tremoveEventListeners(element, loadHandler, errorHandler);\n\t};\n\taddEventListeners(element, loadHandler, errorHandler);\n};\n\nconst managedTags = [\"IMG\", \"IFRAME\", \"VIDEO\"];\n\nconst onEnter = (element, instance) => {\n\tconst settings = instance._settings;\n\tcallbackIfSet(settings.callback_enter, element);\n\tif (!settings.load_delay) {\n\t\trevealAndUnobserve(element, instance);\n\t\treturn;\n\t}\n\tdelayLoad(element, instance);\n};\n\nconst revealAndUnobserve = (element, instance) => {\n\tvar observer = instance._observer;\n\trevealElement(element, instance);\n\tif (observer && instance._settings.auto_unobserve) {\n\t\tobserver.unobserve(element);\n\t}\n};\n\nconst onExit = (element, instance) => {\n\tconst settings = instance._settings;\n\tcallbackIfSet(settings.callback_exit, element);\n\tif (!settings.load_delay) {\n\t\treturn;\n\t}\n\tcancelDelayLoad(element);\n};\n\nconst cancelDelayLoad = element => {\n\tvar timeoutId = getTimeoutData(element);\n\tif (!timeoutId) {\n\t\treturn; // do nothing if timeout doesn't exist\n\t}\n\tclearTimeout(timeoutId);\n\tsetTimeoutData(element, null);\n};\n\nconst delayLoad = (element, instance) => {\n\tvar loadDelay = instance._settings.load_delay;\n\tvar timeoutId = getTimeoutData(element);\n\tif (timeoutId) {\n\t\treturn; // do nothing if timeout already set\n\t}\n\ttimeoutId = setTimeout(function() {\n\t\trevealAndUnobserve(element, instance);\n\t\tcancelDelayLoad(element);\n\t}, loadDelay);\n\tsetTimeoutData(element, timeoutId);\n};\n\nconst revealElement = (element, instance, force) => {\n\tvar settings = instance._settings;\n\tif (!force && getWasProcessedData(element)) {\n\t\treturn; // element has already been processed and force wasn't true\n\t}\n\tif (managedTags.indexOf(element.tagName) > -1) {\n\t\taddOneShotEventListeners(element, instance);\n\t\taddClass(element, settings.class_loading);\n\t}\n\tsetSources(element, instance);\n\tsetWasProcessedData(element);\n\tcallbackIfSet(settings.callback_reveal, element);\n\tcallbackIfSet(settings.callback_set, element);\n};\n\nconst isIntersecting = entry =>\n\tentry.isIntersecting || entry.intersectionRatio > 0;\n\nconst getObserverSettings = settings => ({\n\troot: settings.container === document ? null : settings.container,\n\trootMargin: settings.thresholds || settings.threshold + \"px\"\n});\n\nconst setObserver = instance => {\n\tif (!supportsIntersectionObserver) {\n\t\treturn false;\n\t}\n\tinstance._observer = new IntersectionObserver(entries => {\n\t\tentries.forEach(entry =>\n\t\t\tisIntersecting(entry)\n\t\t\t\t? onEnter(entry.target, instance)\n\t\t\t\t: onExit(entry.target, instance)\n\t\t);\n\t}, getObserverSettings(instance._settings));\n\treturn true;\n};\n\nconst nativeLazyTags = [\"IMG\", \"IFRAME\"];\n\nconst shouldUseNative = settings =>\n\tsettings.use_native && \"loading\" in HTMLImageElement.prototype;\n\nconst loadAllNative = instance => {\n\tinstance._elements.forEach(element => {\n\t\tif (nativeLazyTags.indexOf(element.tagName) === -1) {\n\t\t\treturn;\n\t\t}\n\t\telement.setAttribute(\"loading\", \"lazy\");\n\t\trevealElement(element, instance);\n\t});\n};\n\nconst nodeSetToArray = nodeSet => Array.prototype.slice.call(nodeSet);\n\nconst queryElements = settings =>\n\tsettings.container.querySelectorAll(settings.elements_selector);\n\nconst getElements = (elements, settings) =>\n\tpurgeProcessedElements(nodeSetToArray(elements || queryElements(settings)));\n\nconst LazyLoad = function(customSettings, elements) {\n\tthis._settings = getInstanceSettings(customSettings);\n\tthis._loadingCount = 0;\n\tsetObserver(this);\n\tthis.update(elements);\n};\n\nLazyLoad.prototype = {\n\tupdate: function(elements) {\n\t\tvar settings = this._settings;\n\t\tthis._elements = getElements(elements, settings);\n\t\tif (isBot || !this._observer) {\n\t\t\tthis.loadAll();\n\t\t\treturn;\n\t\t}\n\t\tif (shouldUseNative(settings)) {\n\t\t\tloadAllNative(this);\n\t\t\tthis._elements = getElements(elements, settings);\n\t\t}\n\t\tthis._elements.forEach(element => {\n\t\t\tthis._observer.observe(element);\n\t\t});\n\t},\n\n\tdestroy: function() {\n\t\tif (this._observer) {\n\t\t\tthis._elements.forEach(element => {\n\t\t\t\tthis._observer.unobserve(element);\n\t\t\t});\n\t\t\tthis._observer = null;\n\t\t}\n\t\tthis._elements = null;\n\t\tthis._settings = null;\n\t},\n\n\tload: function(element, force) {\n\t\trevealElement(element, this, force);\n\t},\n\n\tloadAll: function() {\n\t\tthis._elements.forEach(element => {\n\t\t\trevealAndUnobserve(element, this);\n\t\t});\n\t}\n};\n\n/* Automatic instances creation if required (useful for async script loading) */\nif (runningOnBrowser) {\n\tautoInitialize(LazyLoad, window.lazyLoadOptions);\n}\n\nreturn LazyLoad;\n\n}());\n"]}